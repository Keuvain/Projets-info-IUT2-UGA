function cov_nvvalby7s(){var path="/users/info/etu-2a/zhengke/info2/tp2/fichiers-etudiant/src/chessboard.js";var hash="f4a422d200d7301c77f1c93106d5329b72648125";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/users/info/etu-2a/zhengke/info2/tp2/fichiers-etudiant/src/chessboard.js",statementMap:{"0":{start:{line:1,column:14},end:{line:1,column:35}},"1":{start:{line:2,column:14},end:{line:2,column:35}},"2":{start:{line:3,column:13},end:{line:3,column:33}},"3":{start:{line:4,column:13},end:{line:4,column:33}},"4":{start:{line:5,column:15},end:{line:5,column:37}},"5":{start:{line:6,column:15},end:{line:6,column:37}},"6":{start:{line:7,column:13},end:{line:7,column:33}},"7":{start:{line:13,column:19},end:{line:20,column:1}},"8":{start:{line:19,column:2},end:{line:19,column:19}},"9":{start:{line:29,column:0},end:{line:98,column:2}},"10":{start:{line:31,column:2},end:{line:31,column:19}},"11":{start:{line:33,column:23},end:{line:40,column:3}},"12":{start:{line:43,column:11},end:{line:43,column:12}},"13":{start:{line:46,column:2},end:{line:68,column:3}},"14":{start:{line:46,column:15},end:{line:46,column:16}},"15":{start:{line:48,column:22},end:{line:54,column:6}},"16":{start:{line:56,column:4},end:{line:56,column:32}},"17":{start:{line:59,column:22},end:{line:65,column:6}},"18":{start:{line:67,column:4},end:{line:67,column:32}},"19":{start:{line:71,column:2},end:{line:97,column:5}},"20":{start:{line:75,column:28},end:{line:75,column:32}},"21":{start:{line:77,column:4},end:{line:96,column:7}},"22":{start:{line:87,column:6},end:{line:95,column:8}},"23":{start:{line:113,column:0},end:{line:121,column:2}},"24":{start:{line:114,column:2},end:{line:119,column:3}},"25":{start:{line:114,column:15},end:{line:114,column:16}},"26":{start:{line:115,column:14},end:{line:115,column:28}},"27":{start:{line:116,column:4},end:{line:118,column:5}},"28":{start:{line:117,column:6},end:{line:117,column:15}},"29":{start:{line:120,column:2},end:{line:120,column:14}},"30":{start:{line:123,column:0},end:{line:123,column:28}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:13,column:19},end:{line:13,column:20}},loc:{start:{line:13,column:31},end:{line:20,column:1}},line:13},"1":{name:"(anonymous_1)",decl:{start:{line:29,column:28},end:{line:29,column:29}},loc:{start:{line:29,column:40},end:{line:98,column:1}},line:29},"2":{name:"(anonymous_2)",decl:{start:{line:74,column:12},end:{line:74,column:13}},loc:{start:{line:74,column:22},end:{line:97,column:3}},line:74},"3":{name:"(anonymous_3)",decl:{start:{line:86,column:14},end:{line:86,column:15}},loc:{start:{line:86,column:31},end:{line:96,column:5}},line:86},"4":{name:"(anonymous_4)",decl:{start:{line:113,column:32},end:{line:113,column:33}},loc:{start:{line:113,column:54},end:{line:121,column:1}},line:113}},branchMap:{"0":{loc:{start:{line:116,column:4},end:{line:118,column:5}},type:"if",locations:[{start:{line:116,column:4},end:{line:118,column:5}},{start:{line:116,column:4},end:{line:118,column:5}}],line:116},"1":{loc:{start:{line:116,column:8},end:{line:116,column:42}},type:"binary-expr",locations:[{start:{line:116,column:8},end:{line:116,column:23}},{start:{line:116,column:27},end:{line:116,column:42}}],line:116}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"f4a422d200d7301c77f1c93106d5329b72648125"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_nvvalby7s=function(){return actualCoverage;};}return actualCoverage;}cov_nvvalby7s();const Color=(cov_nvvalby7s().s[0]++,require('./color.js'));const Queen=(cov_nvvalby7s().s[1]++,require('./queen.js'));const King=(cov_nvvalby7s().s[2]++,require('./king.js'));const Pawn=(cov_nvvalby7s().s[3]++,require('./pawn.js'));const Bishop=(cov_nvvalby7s().s[4]++,require('./bishop.js'));const Knight=(cov_nvvalby7s().s[5]++,require('./knight.js'));const Rook=(cov_nvvalby7s().s[6]++,require('./rook.js'));/**
 * Chessboard constructor.
 * @constructor
 */cov_nvvalby7s().s[7]++;const Chessboard=function(){cov_nvvalby7s().f[0]++;cov_nvvalby7s().s[8]++;/**
   * An array containing the different pieces that have not been captured yet.
   * @type {Array.<Piece>}
   * @public
   */this.pieces=[];};/**
 * Initialize the chessboard.
 * This function will create the pieces and put them to their corresponding positions.
 * White pieces are located at the lowest ranks.
 * Black pieces are located at the uppest ranks.
 * The queen always starts on a cell corresponding to its color.
 */cov_nvvalby7s().s[9]++;Chessboard.prototype.init=function(){cov_nvvalby7s().f[1]++;cov_nvvalby7s().s[10]++;// Empty the array from previous games.
this.pieces=[];const chessPackage=(cov_nvvalby7s().s[11]++,{Queen:Queen,King:King,Bishop:Bishop,Rook:Rook,Knight:Knight,Pawn:Pawn});// Each piece has a uniq numerical id.
let id=(cov_nvvalby7s().s[12]++,0);// Initialize the board.
cov_nvvalby7s().s[13]++;for(let i=(cov_nvvalby7s().s[14]++,1);i<=8;i++){// Put the black pawns on the 7th rank
const blackPawn=(cov_nvvalby7s().s[15]++,new Pawn({rank:7,file:i,id:++id,chessboard:this,color:Color.BLACK}));cov_nvvalby7s().s[16]++;this.pieces.push(blackPawn);// Put the white pawns on the 2nd rank
const whitePawn=(cov_nvvalby7s().s[17]++,new Pawn({rank:2,file:i,id:++id,chessboard:this,color:Color.WHITE}));cov_nvvalby7s().s[18]++;this.pieces.push(whitePawn);}// Put the other pieces
cov_nvvalby7s().s[19]++;[{rank:1,color:Color.WHITE},{rank:8,color:Color.BLACK}].forEach(data=>{cov_nvvalby7s().f[2]++;const{rank,color}=(cov_nvvalby7s().s[20]++,data);cov_nvvalby7s().s[21]++;['Rook','Knight','Bishop','Queen','King','Bishop','Knight','Rook'].forEach((Piece,file)=>{cov_nvvalby7s().f[3]++;cov_nvvalby7s().s[22]++;this.pieces.push(new chessPackage[Piece]({chessboard:this,rank:rank,id:++id,file:file+1,color:color}));});});};/**
 * Retrieve a piece at a given rank and file.
 * @param {number} rank - the rank of the piece.
 * @param {number} file - the file of the piece.
 * @return {?Piece} Returns the piece (if any) or <code>null</code> if
 * no piece is located at the given rank and file.
 *
 * @example
 * // After initializing the board, returns the white rook located at (1, a)
 * let chessboard = new Chessboard();
 * chessboard.init();
 * let piece = this.getPiece(1, 1);
 */cov_nvvalby7s().s[23]++;Chessboard.prototype.getPiece=function(rank,file){cov_nvvalby7s().f[4]++;cov_nvvalby7s().s[24]++;for(let i=(cov_nvvalby7s().s[25]++,0);i<this.pieces.length;i++){const p=(cov_nvvalby7s().s[26]++,this.pieces[i]);cov_nvvalby7s().s[27]++;if((cov_nvvalby7s().b[1][0]++,p.rank===rank)&&(cov_nvvalby7s().b[1][1]++,p.file===file)){cov_nvvalby7s().b[0][0]++;cov_nvvalby7s().s[28]++;return p;}else{cov_nvvalby7s().b[0][1]++;}}cov_nvvalby7s().s[29]++;return null;};cov_nvvalby7s().s[30]++;module.exports=Chessboard;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,