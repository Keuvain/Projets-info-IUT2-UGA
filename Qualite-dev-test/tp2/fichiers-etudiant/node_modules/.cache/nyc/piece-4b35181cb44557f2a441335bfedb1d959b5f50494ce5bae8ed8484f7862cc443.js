function cov_1ezq0fuosa(){var path="/users/info/etu-2a/zhengke/info2/tp2/fichiers-etudiant/src/piece.js";var hash="f48a2b535550ca2c56a4f4e7ad143db5f9b1fe44";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/users/info/etu-2a/zhengke/info2/tp2/fichiers-etudiant/src/piece.js",statementMap:{"0":{start:{line:1,column:14},end:{line:1,column:35}},"1":{start:{line:2,column:28},end:{line:2,column:65}},"2":{start:{line:3,column:25},end:{line:3,column:59}},"3":{start:{line:12,column:14},end:{line:64,column:1}},"4":{start:{line:17,column:2},end:{line:17,column:39}},"5":{start:{line:23,column:2},end:{line:23,column:23}},"6":{start:{line:31,column:2},end:{line:31,column:32}},"7":{start:{line:39,column:2},end:{line:39,column:32}},"8":{start:{line:46,column:2},end:{line:46,column:44}},"9":{start:{line:54,column:2},end:{line:54,column:42}},"10":{start:{line:63,column:2},end:{line:63,column:22}},"11":{start:{line:73,column:0},end:{line:122,column:2}},"12":{start:{line:74,column:2},end:{line:121,column:3}},"13":{start:{line:76,column:4},end:{line:96,column:5}},"14":{start:{line:78,column:23},end:{line:78,column:59}},"15":{start:{line:79,column:16},end:{line:79,column:56}},"16":{start:{line:82,column:6},end:{line:82,column:46}},"17":{start:{line:83,column:6},end:{line:83,column:33}},"18":{start:{line:84,column:6},end:{line:84,column:25}},"19":{start:{line:85,column:6},end:{line:85,column:25}},"20":{start:{line:88,column:6},end:{line:95,column:8}},"21":{start:{line:99,column:24},end:{line:102,column:5}},"22":{start:{line:105,column:24},end:{line:108,column:5}},"23":{start:{line:111,column:4},end:{line:111,column:21}},"24":{start:{line:112,column:4},end:{line:112,column:21}},"25":{start:{line:115,column:4},end:{line:120,column:6}},"26":{start:{line:165,column:0},end:{line:168,column:2}},"27":{start:{line:166,column:16},end:{line:166,column:52}},"28":{start:{line:167,column:2},end:{line:167,column:24}},"29":{start:{line:176,column:0},end:{line:181,column:2}},"30":{start:{line:177,column:16},end:{line:177,column:52}},"31":{start:{line:178,column:2},end:{line:178,column:35}},"32":{start:{line:178,column:22},end:{line:178,column:35}},"33":{start:{line:180,column:2},end:{line:180,column:36}},"34":{start:{line:193,column:0},end:{line:243,column:2}},"35":{start:{line:195,column:2},end:{line:195,column:41}},"36":{start:{line:195,column:28},end:{line:195,column:41}},"37":{start:{line:196,column:2},end:{line:196,column:41}},"38":{start:{line:196,column:28},end:{line:196,column:41}},"39":{start:{line:199,column:2},end:{line:201,column:3}},"40":{start:{line:200,column:4},end:{line:200,column:67}},"41":{start:{line:204,column:16},end:{line:207,column:3}},"42":{start:{line:212,column:20},end:{line:215,column:3}},"43":{start:{line:218,column:12},end:{line:221,column:3}},"44":{start:{line:224,column:2},end:{line:224,column:78}},"45":{start:{line:224,column:65},end:{line:224,column:78}},"46":{start:{line:227,column:2},end:{line:233,column:3}},"47":{start:{line:232,column:4},end:{line:232,column:17}},"48":{start:{line:236,column:2},end:{line:240,column:3}},"49":{start:{line:237,column:4},end:{line:237,column:52}},"50":{start:{line:237,column:39},end:{line:237,column:52}},"51":{start:{line:238,column:4},end:{line:238,column:29}},"52":{start:{line:239,column:4},end:{line:239,column:29}},"53":{start:{line:242,column:2},end:{line:242,column:14}},"54":{start:{line:245,column:0},end:{line:245,column:23}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:12,column:14},end:{line:12,column:15}},loc:{start:{line:12,column:33},end:{line:64,column:1}},line:12},"1":{name:"(anonymous_1)",decl:{start:{line:73,column:23},end:{line:73,column:24}},loc:{start:{line:73,column:45},end:{line:122,column:1}},line:73},"2":{name:"(anonymous_2)",decl:{start:{line:165,column:26},end:{line:165,column:27}},loc:{start:{line:165,column:48},end:{line:168,column:1}},line:165},"3":{name:"(anonymous_3)",decl:{start:{line:176,column:29},end:{line:176,column:30}},loc:{start:{line:176,column:51},end:{line:181,column:1}},line:176},"4":{name:"(anonymous_4)",decl:{start:{line:193,column:26},end:{line:193,column:27}},loc:{start:{line:193,column:48},end:{line:243,column:1}},line:193}},branchMap:{"0":{loc:{start:{line:31,column:14},end:{line:31,column:31}},type:"binary-expr",locations:[{start:{line:31,column:14},end:{line:31,column:26}},{start:{line:31,column:30},end:{line:31,column:31}}],line:31},"1":{loc:{start:{line:39,column:14},end:{line:39,column:31}},type:"binary-expr",locations:[{start:{line:39,column:14},end:{line:39,column:26}},{start:{line:39,column:30},end:{line:39,column:31}}],line:39},"2":{loc:{start:{line:46,column:15},end:{line:46,column:43}},type:"binary-expr",locations:[{start:{line:46,column:15},end:{line:46,column:28}},{start:{line:46,column:32},end:{line:46,column:43}}],line:46},"3":{loc:{start:{line:54,column:17},end:{line:54,column:41}},type:"binary-expr",locations:[{start:{line:54,column:17},end:{line:54,column:32}},{start:{line:54,column:36},end:{line:54,column:41}}],line:54},"4":{loc:{start:{line:74,column:2},end:{line:121,column:3}},type:"if",locations:[{start:{line:74,column:2},end:{line:121,column:3}},{start:{line:74,column:2},end:{line:121,column:3}}],line:74},"5":{loc:{start:{line:76,column:4},end:{line:96,column:5}},type:"if",locations:[{start:{line:76,column:4},end:{line:96,column:5}},{start:{line:76,column:4},end:{line:96,column:5}}],line:76},"6":{loc:{start:{line:178,column:2},end:{line:178,column:35}},type:"if",locations:[{start:{line:178,column:2},end:{line:178,column:35}},{start:{line:178,column:2},end:{line:178,column:35}}],line:178},"7":{loc:{start:{line:195,column:2},end:{line:195,column:41}},type:"if",locations:[{start:{line:195,column:2},end:{line:195,column:41}},{start:{line:195,column:2},end:{line:195,column:41}}],line:195},"8":{loc:{start:{line:195,column:6},end:{line:195,column:26}},type:"binary-expr",locations:[{start:{line:195,column:6},end:{line:195,column:14}},{start:{line:195,column:18},end:{line:195,column:26}}],line:195},"9":{loc:{start:{line:196,column:2},end:{line:196,column:41}},type:"if",locations:[{start:{line:196,column:2},end:{line:196,column:41}},{start:{line:196,column:2},end:{line:196,column:41}}],line:196},"10":{loc:{start:{line:196,column:6},end:{line:196,column:26}},type:"binary-expr",locations:[{start:{line:196,column:6},end:{line:196,column:14}},{start:{line:196,column:18},end:{line:196,column:26}}],line:196},"11":{loc:{start:{line:199,column:2},end:{line:201,column:3}},type:"if",locations:[{start:{line:199,column:2},end:{line:201,column:3}},{start:{line:199,column:2},end:{line:201,column:3}}],line:199},"12":{loc:{start:{line:200,column:11},end:{line:200,column:66}},type:"binary-expr",locations:[{start:{line:200,column:11},end:{line:200,column:35}},{start:{line:200,column:39},end:{line:200,column:66}}],line:200},"13":{loc:{start:{line:213,column:10},end:{line:213,column:66}},type:"cond-expr",locations:[{start:{line:213,column:29},end:{line:213,column:30}},{start:{line:213,column:33},end:{line:213,column:66}}],line:213},"14":{loc:{start:{line:214,column:10},end:{line:214,column:66}},type:"cond-expr",locations:[{start:{line:214,column:29},end:{line:214,column:30}},{start:{line:214,column:33},end:{line:214,column:66}}],line:214},"15":{loc:{start:{line:224,column:2},end:{line:224,column:78}},type:"if",locations:[{start:{line:224,column:2},end:{line:224,column:78}},{start:{line:224,column:2},end:{line:224,column:78}}],line:224},"16":{loc:{start:{line:224,column:6},end:{line:224,column:63}},type:"binary-expr",locations:[{start:{line:224,column:6},end:{line:224,column:31}},{start:{line:224,column:35},end:{line:224,column:63}}],line:224},"17":{loc:{start:{line:227,column:2},end:{line:233,column:3}},type:"if",locations:[{start:{line:227,column:2},end:{line:233,column:3}},{start:{line:227,column:2},end:{line:233,column:3}}],line:227},"18":{loc:{start:{line:228,column:4},end:{line:230,column:52}},type:"binary-expr",locations:[{start:{line:228,column:4},end:{line:228,column:43}},{start:{line:229,column:4},end:{line:229,column:43}},{start:{line:230,column:4},end:{line:230,column:52}}],line:228},"19":{loc:{start:{line:228,column:6},end:{line:228,column:42}},type:"binary-expr",locations:[{start:{line:228,column:6},end:{line:228,column:22}},{start:{line:228,column:26},end:{line:228,column:42}}],line:228},"20":{loc:{start:{line:229,column:6},end:{line:229,column:42}},type:"binary-expr",locations:[{start:{line:229,column:6},end:{line:229,column:22}},{start:{line:229,column:26},end:{line:229,column:42}}],line:229},"21":{loc:{start:{line:236,column:9},end:{line:236,column:43}},type:"binary-expr",locations:[{start:{line:236,column:9},end:{line:236,column:24}},{start:{line:236,column:28},end:{line:236,column:43}}],line:236},"22":{loc:{start:{line:237,column:4},end:{line:237,column:52}},type:"if",locations:[{start:{line:237,column:4},end:{line:237,column:52}},{start:{line:237,column:4},end:{line:237,column:52}}],line:237}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"f48a2b535550ca2c56a4f4e7ad143db5f9b1fe44"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1ezq0fuosa=function(){return actualCoverage;};}return actualCoverage;}cov_1ezq0fuosa();const Color=(cov_1ezq0fuosa().s[0]++,require('./color.js'));const CaptureNotification=(cov_1ezq0fuosa().s[1]++,require('./notifications/capture.js'));const MoveNotification=(cov_1ezq0fuosa().s[2]++,require('./notifications/move.js'));/**
 * Piece constructor.
 * @param {!Object} options - a non-null list of options.
 * It should contain at least the two following fields: chessboard and id.
 * @abstract
 * @constructor
 */cov_1ezq0fuosa().s[3]++;const Piece=function(options){cov_1ezq0fuosa().f[0]++;cov_1ezq0fuosa().s[4]++;/**
   * The chessboard on which the piece is placed.
   * @type {Chessboard}
   */this.chessboard=options.chessboard;/**
   * A uniq ID used to represent the piece..
   * @type {number}
   */cov_1ezq0fuosa().s[5]++;this.id=options.id;/**
   * The rank (i.e., the row on the chessboard) of the piece.
   * Ranks are 1-indexed.
   * @type {number}
   * @default 1
   */cov_1ezq0fuosa().s[6]++;this.rank=(cov_1ezq0fuosa().b[0][0]++,options.rank)||(cov_1ezq0fuosa().b[0][1]++,1);/**
   * The file (i.e., the column on the chessboard) of the piece.
   * Files are 1-indexed.
   * @type {number}
   * @default 1
   */cov_1ezq0fuosa().s[7]++;this.file=(cov_1ezq0fuosa().b[1][0]++,options.file)||(cov_1ezq0fuosa().b[1][1]++,1);/**
   * The color (white or black) of the piece.
   * @type {Color}
   * @default Color.WHITE
   */cov_1ezq0fuosa().s[8]++;this.color=(cov_1ezq0fuosa().b[2][0]++,options.color)||(cov_1ezq0fuosa().b[2][1]++,Color.WHITE);/**
   * Whether the piece can leap other pieces.
   * Only the knight can leap in chess.
   * @type {boolean}
   * @default false
   */cov_1ezq0fuosa().s[9]++;this.canLeap=(cov_1ezq0fuosa().b[3][0]++,options.canLeap)||(cov_1ezq0fuosa().b[3][1]++,false);/**
   * An array of observers that will be notify on any change
   * in the piece state. Supported notifications are so far:
   * any movement or capture of the piece.
   * @type {Array.<Object>}
   * @default empty array
   */cov_1ezq0fuosa().s[10]++;this.observers=[];};/**
 * Move a piece at a specific rank and file. Prior to moving,
 * this method calls the <code>canMove</code> method.
 * Yelds move and capture notifications if necessary.
 * @param {number} rank - the target rank.
 * @param {number} file - the target file.
 */cov_1ezq0fuosa().s[11]++;Piece.prototype.move=function(rank,file){cov_1ezq0fuosa().f[1]++;cov_1ezq0fuosa().s[12]++;if(this.canMove(rank,file)){cov_1ezq0fuosa().b[4][0]++;cov_1ezq0fuosa().s[13]++;// Before moving, we check if we can capture a piece
if(this.canCapture(rank,file)){cov_1ezq0fuosa().b[5][0]++;// If the answer is yes, get a ref to the captured piece and its index.
const captured=(cov_1ezq0fuosa().s[14]++,this.chessboard.getPiece(rank,file)),index=(cov_1ezq0fuosa().s[15]++,this.chessboard.pieces.indexOf(captured));// Remove the piece from the chessboard
cov_1ezq0fuosa().s[16]++;this.chessboard.pieces.splice(index,1);cov_1ezq0fuosa().s[17]++;captured.isCaptured=true;cov_1ezq0fuosa().s[18]++;captured.rank=-1;cov_1ezq0fuosa().s[19]++;captured.file=-1;// Notify observers that the piece has been captured
cov_1ezq0fuosa().s[20]++;captured.update(new CaptureNotification({pos:{rank:rank,file:file}}));}else{cov_1ezq0fuosa().b[5][1]++;}// Store the previous position of the piece to move
const oldPosition=(cov_1ezq0fuosa().s[21]++,{rank:this.rank,file:this.file});// Store the new position of the piece to move
const newPosition=(cov_1ezq0fuosa().s[22]++,{rank:rank,file:file});// Actually move the piece
cov_1ezq0fuosa().s[23]++;this.rank=rank;cov_1ezq0fuosa().s[24]++;this.file=file;// Notify observers that the piece have been moved
cov_1ezq0fuosa().s[25]++;this.update(new MoveNotification({oldPosition:oldPosition,newPosition:newPosition}));}else{cov_1ezq0fuosa().b[4][1]++;}};/* istanbul ignore next : tired of writing some tests */ /**
 * Subscribe an observer to listen to state changes.
 * This design follows the Observer design pattern.
 * The observer must have a <code>notify(context, notification)</code> callback function.
 * @param {Object} observer - the subscribed observer.
 *
 */Piece.prototype.subscribe=function(observer){this.observers.push(observer);};/* istanbul ignore next : tired of writing some tests */ /**
 * Unsubscribe a previously subscrtibed observer.
 * This design follows the Observer design pattern.
 * @param {Object} observer - the observer to unsubscribe.
 *
 */Piece.prototype.unsubscribe=function(observer){const index=this.observers.indexOf(observer);this.observers.splice(index,1);};/* istanbul ignore next : tired of writing some tests */ /**
 * Notify all observers of any state change.
 * This design follows the Observer design pattern.
 * @param {Notification} notification - the notification to send to the observers.
 *
 */Piece.prototype.update=function(notification){this.observers.forEach(obs=>obs.notify(this,notification));};/**
 * Whether a piece can land on a specific cell. A piece can land whether the target cell is free.
 * @param {number} rank - the rank on the chessboard.
 * @param {number} file - the file on the chessboard.
 * @return {boolean} <code>true</code> if the piece can land, <code>false</code> otherwise.
 */cov_1ezq0fuosa().s[26]++;Piece.prototype.canLand=function(rank,file){cov_1ezq0fuosa().f[2]++;const piece=(cov_1ezq0fuosa().s[27]++,this.chessboard.getPiece(rank,file));cov_1ezq0fuosa().s[28]++;return piece===null;};/**
 * Whether a piece can capture on a specific cell. A piece can capture whether the target cell is occupied by an opponent piece.
 * @param {number} rank - the rank on the chessboard.
 * @param {number} file - the file on the chessboard.
 * @return {boolean} <code>true</code> if the piece can capture, <code>false</code> otherwise.
 */cov_1ezq0fuosa().s[29]++;Piece.prototype.canCapture=function(rank,file){cov_1ezq0fuosa().f[3]++;const piece=(cov_1ezq0fuosa().s[30]++,this.chessboard.getPiece(rank,file));cov_1ezq0fuosa().s[31]++;if(piece===null){cov_1ezq0fuosa().b[6][0]++;cov_1ezq0fuosa().s[32]++;return false;}else{cov_1ezq0fuosa().b[6][1]++;}cov_1ezq0fuosa().s[33]++;return piece.color!==this.color;};/**
 * Whether a piece can move at a given rank and file.
 * This method checks general rules applicable to every piece in chess.
 *
 * This method shall be subclassed by concrete pieces to account for their specific movements.
 *
 * @param {number} rank - the rank on the chessboard.
 * @param {number} file - the file on the chessboard.
 * @return {boolean} <code>true</code> if the piece can move, <code>false</code> otherwise.
 */cov_1ezq0fuosa().s[34]++;Piece.prototype.canMove=function(rank,file){cov_1ezq0fuosa().f[4]++;cov_1ezq0fuosa().s[35]++;// A piece cannot move outside of the chessboard
if((cov_1ezq0fuosa().b[8][0]++,rank<1)||(cov_1ezq0fuosa().b[8][1]++,rank>8)){cov_1ezq0fuosa().b[7][0]++;cov_1ezq0fuosa().s[36]++;return false;}else{cov_1ezq0fuosa().b[7][1]++;}cov_1ezq0fuosa().s[37]++;if((cov_1ezq0fuosa().b[10][0]++,file<1)||(cov_1ezq0fuosa().b[10][1]++,file>8)){cov_1ezq0fuosa().b[9][0]++;cov_1ezq0fuosa().s[38]++;return false;}else{cov_1ezq0fuosa().b[9][1]++;}// If a piece can leap other pieces, then it facilitates the computation.
cov_1ezq0fuosa().s[39]++;if(this.canLeap){cov_1ezq0fuosa().b[11][0]++;cov_1ezq0fuosa().s[40]++;return(cov_1ezq0fuosa().b[12][0]++,this.canLand(rank,file))||(cov_1ezq0fuosa().b[12][1]++,this.canCapture(rank,file));}else{cov_1ezq0fuosa().b[11][1]++;}// Difference between the current and target locations
const delta=(cov_1ezq0fuosa().s[41]++,{rank:rank-this.rank,file:file-this.file});// Compute the direction of the movement :
// +1 to rank (resp. file) means going up (resp. right)
// -1 to rank (resp. file) means going down (resp. left)
const direction=(cov_1ezq0fuosa().s[42]++,{rank:delta.rank===0?(cov_1ezq0fuosa().b[13][0]++,0):(cov_1ezq0fuosa().b[13][1]++,delta.rank/Math.abs(delta.rank)),file:delta.file===0?(cov_1ezq0fuosa().b[14][0]++,0):(cov_1ezq0fuosa().b[14][1]++,delta.file/Math.abs(delta.file))});// Micro-step of the movement following the direction
const p=(cov_1ezq0fuosa().s[43]++,{rank:this.rank+direction.rank,file:this.file+direction.file});// If we cannot land nor capture a piece, we cannot move
cov_1ezq0fuosa().s[44]++;if((cov_1ezq0fuosa().b[16][0]++,!this.canLand(rank,file))&&(cov_1ezq0fuosa().b[16][1]++,!this.canCapture(rank,file))){cov_1ezq0fuosa().b[15][0]++;cov_1ezq0fuosa().s[45]++;return false;}else{cov_1ezq0fuosa().b[15][1]++;}// If the movement is neither vertical, horizontal or diagonal, we cannot move (that does not affect the knight that can leap).
cov_1ezq0fuosa().s[46]++;if((cov_1ezq0fuosa().b[18][0]++,!((cov_1ezq0fuosa().b[19][0]++,delta.rank===0)&&(cov_1ezq0fuosa().b[19][1]++,delta.file!==0)))&&(cov_1ezq0fuosa().b[18][1]++,// Vertical
!((cov_1ezq0fuosa().b[20][0]++,delta.rank!==0)&&(cov_1ezq0fuosa().b[20][1]++,delta.file===0)))&&(cov_1ezq0fuosa().b[18][2]++,// Horizontal
!(Math.abs(delta.rank)===Math.abs(delta.file)))// Diagonal
){cov_1ezq0fuosa().b[17][0]++;cov_1ezq0fuosa().s[47]++;return false;}else{cov_1ezq0fuosa().b[17][1]++;}// As long as the movement is not finished, simulate it by micro-steps. If at some points can no longer land, then stop here.
cov_1ezq0fuosa().s[48]++;while((cov_1ezq0fuosa().b[21][0]++,p.rank!==rank)||(cov_1ezq0fuosa().b[21][1]++,p.file!==file)){cov_1ezq0fuosa().s[49]++;if(!this.canLand(p.rank,p.file)){cov_1ezq0fuosa().b[22][0]++;cov_1ezq0fuosa().s[50]++;return false;}else{cov_1ezq0fuosa().b[22][1]++;}cov_1ezq0fuosa().s[51]++;p.rank+=direction.rank;cov_1ezq0fuosa().s[52]++;p.file+=direction.file;}cov_1ezq0fuosa().s[53]++;return true;};cov_1ezq0fuosa().s[54]++;module.exports=Piece;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,